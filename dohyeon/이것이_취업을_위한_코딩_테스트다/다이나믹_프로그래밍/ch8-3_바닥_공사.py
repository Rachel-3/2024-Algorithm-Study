n = int(input())

d = [0] * 1001

d[1] = 1
d[2] = 3
for i in range(3, n + 1) :
    d[i] = (d[i - 1] + 2 * d[i - 2]) % 796796

print(d[n])

''' 
문제 해설
타일링 문제의 기본,
n = 3인 경우 바닥을 덮개로 채울수 있는 모든 경우의 수는 5개가 있다.
점화식을 세우자
1. i - 1 까지의 길이가 덮개로 이미 채워져 있으면, 2 * 1 덮개를 채우는 하나의 경우밖에 존재하지 않는다.
2. i - 2 까지의 길이가 덮개로 이미 채워져 있으면, 2 * 1 덮개를 2개 채우거나,
                                        2 * 2 덮개를 1개 채우는 방법 2개가 존재한다.
결국 점화식은
a_i = a_i-1 + a_i-2 * 2
결국 a_i는 a_i-1 + a_i-2 _ a_i-2가 된다.
점화식으로 새우는게 존나 어렵다는게 키포인트다.
'''